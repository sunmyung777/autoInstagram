# 모든 계정의 예약 조회
python scheduler_cli.py list

# 특정 계정의 예약만 조회
python scheduler_cli.py list -u formindsinone

# 모든 대기 중인 예약 삭제
python scheduler_cli.py delete

# 특정 계정의 모든 예약 삭제
python scheduler_cli.py delete -u formindsinone

# 특정 계정의 특정 영상 예약 삭제
python scheduler_cli.py delete -u formindsinone -v video1.mp4

# 모든 계정의 예약되지 않은 영상 검색
python scheduler_cli.py unscheduled

# 특정 계정의 예약되지 않은 영상 검색
python scheduler_cli.py unscheduled -u formindsinone

# 모든 계정의 캡션이 없는 영상 검색
python scheduler_cli.py captions

# 특정 계정의 캡션이 없는 영상 검색
python scheduler_cli.py captions -u formindsinone

# 모든 계정의 영상이 없는 캡션 검색
python scheduler_cli.py captions --orphaned

# 특정 계정의 영상이 없는 캡션 검색
python scheduler_cli.py captions -u formindsinone --orphaned

# Instagram 자동화 시스템 사용 설명서

## 1. 시스템 설정

### 1.1 초기 설정
```bash
# 필요한 디렉토리 생성
mkdir -p logs accounts/[계정명]/videos accounts/[계정명]/captions sessions

# 의존성 설치
pip install -r requirements.txt
```

### 1.2 설정 파일 (config.json)
```json
{
    "accounts": [
        {
            "username": "인스타그램_계정명",
            "password": "비밀번호",
            "proxy": "프록시주소 또는 null",
            "default_tags": ["#태그1", "#태그2"],
            "account_directory": "accounts/계정명"
        }
    ],
    "upload_settings": {
        "min_delay_between_uploads": 300,  // 업로드 간 최소 대기 시간(초)
        "max_delay_between_uploads": 900,  // 업로드 간 최대 대기 시간(초)
        "min_delay_before_upload": 5,      // 업로드 전 최소 대기 시간(초)
        "max_delay_before_upload": 15      // 업로드 전 최대 대기 시간(초)
    }
}
```

## 2. 일반 업로드 사용법

### 2.1 비디오 업로드 준비
1. 비디오 파일(.mp4)을 `accounts/[계정명]/videos/` 디렉토리에 넣습니다.
2. (선택) 캡션 파일을 `accounts/[계정명]/captions/` 디렉토리에 넣습니다.
   - 캡션 파일명은 비디오 파일명과 동일해야 합니다 (확장자만 .txt).
   - 캡션 파일이 없으면 기본 태그가 사용됩니다.

### 2.2 업로드 실행
```bash
python test_upload.py
```

## 3. 예약 업로드 사용법

### 3.1 예약 추가
```bash
# 기본 형식
python scheduler_cli.py add [계정명] [비디오파일명] "YYYY-MM-DD HH:MM"

# 캡션 파일 사용 시
python scheduler_cli.py add [계정명] [비디오파일명] "YYYY-MM-DD HH:MM" --caption

# 예시
python scheduler_cli.py add formindsinone video1.mp4 "2024-06-25 15:30"
```

### 3.2 예약 목록 조회
```bash
# 전체 예약 목록
python scheduler_cli.py list

# 특정 계정의 예약만 조회
python scheduler_cli.py list --username [계정명]

# 특정 상태의 예약만 조회
python scheduler_cli.py list --status [상태]
# 상태: pending(대기), completed(완료), failed(실패), cancelled(취소)
```

### 3.3 예약 취소
```bash
python scheduler_cli.py cancel [예약ID]
```

## 4. 파일 구조
```
instagram_automation/
├── accounts/
│   └── [계정명]/
│       ├── videos/    - 업로드할 비디오 파일
│       └── captions/  - 캡션 파일 (선택사항)
├── sessions/          - 세션 정보 저장
├── logs/             - 로그 파일 저장
├── config.json       - 설정 파일
└── schedules.json    - 예약 정보 저장
```

## 5. 주의사항

1. 비디오 파일 형식
   - MP4 형식만 지원
   - 인스타그램 릴스 규격에 맞춰야 함
   - 세로 영상 권장

2. 캡션 파일
   - UTF-8 인코딩 사용
   - .txt 확장자
   - 비디오 파일과 동일한 이름

3. 예약 업로드
   - 과거 시간으로 예약 불가
   - 예약 시간은 한국 시간 기준 (KST)
   - 업로드 실패 시 자동 재시도 없음

4. 보안
   - 비밀번호는 config.json에 평문으로 저장됨
   - config.json은 안전하게 관리 필요
   - 세션 파일도 보안에 주의

## 6. 문제 해결

1. 로그 확인
   - logs/instagram_upload_YYYYMMDD.log
   - logs/instagram_scheduler_YYYYMMDD.log

2. 일반적인 문제
   - 세션 만료: 자동으로 재로그인 시도
   - 프록시 오류: config.json에서 프록시 설정 확인
   - 파일 누락: 비디오/캡션 파일 경로 확인

3. 예약 관련 문제
   - 잘못된 시간 형식: "YYYY-MM-DD HH:MM" 형식 확인
   - 파일 찾기 실패: 전체 경로 정확히 확인
   - 계정 불일치: config.json의 계정 정보 확인